# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 'tagged-release'

on:
  pull_request:
    branches:
      - master

jobs:
  android:
    name: 'build android apk'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore/aniflow-keystore.jks'
          encodedString: ${{ secrets.KEYSTORE }}

      - run: flutter pub get

#      - name: build bundle
#        run: flutter build appbundle --flavor limited
#        env:
#          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
#          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
#          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: build android app
        run: flutter build apk --split-per-abi --flavor full
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/*

  macos:
    name: 'build macos app'
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install create-dmg
        run: brew install create-dmg

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter pub get

      - name: build macos app
        run: flutter build macos

      - name: Create .dmg
        run: |
          create-dmg build/macos/Build/Products/Release/aniflow.dmg build/macos/Build/Products/Release/aniflow.app

      - name: Upload Macos app Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-release
          path: build/macos/Build/Products/Release/aniflow.dmg

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [android, macos]

    steps:
      - name: Download Android Artifact
        uses: actions/download-artifact@v3
        with:
          name: android-release

      - name: Download Macos Artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-release

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          artifacts: |
            app-arm64-v8a-full-release.apk
            app-armeabi-v7a-full-release.apk
            app-x86_64-full-release.apk
            aniflow.dmg

          repo_token: "${{ secrets.TOKEN }}"
          prerelease: true
